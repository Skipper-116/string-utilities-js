name: Build, Version, and Publish

on:
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    defaults:
      run:
        working-directory: ./src

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install

      - name: Format Code
        run: pnpm format

      - name: Build the package
        run: pnpm build

      - name: Configure Git
        run: |
          git config --global user.name '${{ github.actor }}'
          git config --global user.email '${{ github.actor }}@users.noreply.github.com'

      - name: Commit changes if any
        run: |
          git add .
          git diff --quiet && git diff --staged --quiet || git commit -m "chore: build and format code [skip ci]"

      - name: Bump version
        run: |
          npm version patch -m "Bump version to %s [skip ci]"
        
      - name: Get new version
        run: |
          echo "NEW_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Generate Changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          version-file: './src/package.json'
          output-file: 'CHANGELOG.md'

      - name: Commit changes
        run: |
          git add .
          git commit -m "Update CHANGELOG.md for version ${{ steps.bump_version.outputs.NEW_VERSION }} [skip ci]"
          git push && git push --tags

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.bump_version.outputs.NEW_VERSION }}
          release_name: Release ${{ steps.bump_version.outputs.NEW_VERSION }}
          body: ${{ steps.changelog.outputs.clean_changelog }}
          draft: false
          prerelease: false

      - name: Push to NPM Registry
        run: pnpm publish --tag latest
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}